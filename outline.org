* CUI に親しむ
マウスを使わずにコンピュータを操作する利点を理解し，実際にやってみましょう
- CUI と GUI
- プレーンテキストとバイナリファイル
- UNIX コマンド
- ファイルの本質と拡張子
* プレーンテキストのちから
業務環境の基礎をプレーンテキストに置くことで，強力なコマンドの恩恵を受けられるようになります
- diff
- grep
- コラム: エンコードと改行コード
- 正規表現
- コラム: DRY 原則
* コンテナ技術
環境を正準化するメリットを学び，実際にDockerを使ってみましょう
- Docker のインストール
- コンテナ内での作業
* 文書: 人間のためのテキスト
プレーンテキスト向けの執筆ツールに触れ，その利点と欠点について意見を交換しましょう
- エディタ
- アウトライナー
- pandoc
- LaTeX
* コード: コンピュータと人間のためのテキスト
プログラミングが業務に占める割合が増えると，どのような問題が生じ得るかについて議論しましょう．
続いて，それらの問題を解決するためのプログラミングの基礎的な方法論を学びましょう．
プログラミング言語には，R言語を使用します．
- スタイル
  - 命名
  - コメントは必要か
  - インデント
  - リンター
- データ構造
- ディレクトリ構造
- データと2次データ
- 関数化と高階関数
- コラム: YAGNI
- R言語の問題点
* 開発
ソフトウェア開発の現場で用いられている手法について概観し，我々が学ぶべき本質について議論しましょう．
- テスト駆動開発
- バージョン管理
- チケット管理システム
- 継続的インテグレーション
- コンテナ
- 継続的デプロイ
- アジャイル開発とカスケード開発
* 業務と研究への応用
我々が業務や研究の現場で課題解決に取り組むとき，満たしているべき要件は何でしょうか．
それらを具体的に解決する方法はあるでしょうか．
** 業務
- Issueベースの課題解決
- 責任を負うのは誰か
*** コミュニケーション
円滑なコミュニケーションはプロジェクト成功の要です．
飛び交うコミュニケーションを構成している要素について考え，適切なツールについて議論しましょう．
- メールの問題点
- 開発者現場で使われるツールとその本質
** 研究
- バージョン管理
- データベースのブラッシュアップ
- プログラム化とパッケージ化
- DRY原則に基づく文書作成
* 現状の業務環境の問題点
本勉強会に参加してくださった皆様は，多くの業務を抱えていることと思います（私もそうです）．
メールボックスに押し寄せるタスクに，うんざりしている方もいらっしゃるでしょう．

大量のタスクに対する同僚の不満の声は何度も聞いてきましたし，
私自身も，不満を漏らしたことは何度もあります．
しかし私は，このような現状に不満を感じている方の中でも，
タスク削減のための具体的な解決策を持っている方の割合は，あまり多くないことに気づきました．

大まかにいえば，大量のタスクが降ってくる原因は，そのタスクを生んだ親，
つまり，より上流の仕事が適切な形でなされていないことにあります．
質の悲劇は，量の悲劇をも招き得るのです．


しかし，そのような状況を生み出しているのは，
- どのように仕事を整理すればよいのかわからない
- 仕事の質の悪さに気づいていない
こと．


コンピュータが普及する以前，仕事が実在する「モノ」を対象になされていた時代には，
仕事の質の良し悪しは，誰の目にも明らかでした．

このような問題が生じた要因の一つに，コンピュータの普及があります．
1960年代頃，コンピュータを使っていたのは，その扱いに精通した専門家に限られていました．
マシンのスペックも低かったため，無駄の無いデータ構造が必要とされた．
コンピュータが普及するようになったのは，Office の発売
Officeが画期的だったのは，すぐに使い始められるところ．
その分，電子データの扱いを勉強しなくても，仕事ができるようになってしまった．
いわば，城を作ることができたのは，経験を積んだ大工だけだったのが，誰でも紙とセロハンテープで可能になってしまった．

上での電子データを用いた作業では複製が普及し，
，複製が容易な電子データで仕事がをするようになっ
や複数人での仕事仕事の対象が実際の物体 に対して仕事
コンピュータ時代ならではの問題ですが，
- 本当はすでに材料が揃っていることに気づいていない
** プログラム化で解決
** コンピュータがある現代ならでは
** 現代人のコンピュータ普及の弊害
** 本勉強会
あまり新しい技術は使わない．基礎体力を養う
** 次の問題
- 何から学べばいいかわからない
- 他人が書いたコードがわからない
- 動くかどうかわからない
